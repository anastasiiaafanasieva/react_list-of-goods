{"version":3,"sources":["App.tsx","index.tsx"],"names":["initialList","App","state","goods","isClicked","sortBy","reversed","selectValue","createList","setState","sortASC","sortNameLength","reverse","selectLength","event","reset","this","filteredGoods","filter","good","length","sort","item1","item2","localeCompare","replaceAll","className","type","classNames","hidden","onClick","map","htmlFor","name","id","min","max","value","onChange","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAIMA,EAAc,CAClB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWWC,EAAb,4MACEC,MAAQ,CACNC,MAAOH,EACPI,WAAW,EACXC,OAAQ,KACRC,UAAU,EACVC,YAAa,GANjB,EASEC,WAAa,WACX,EAAKC,SAAS,CAAEL,WAAW,KAV/B,EAaEM,QAAU,WACR,EAAKD,SAAS,CAAEJ,OAAQ,SAd5B,EAiBEM,eAAiB,WACf,EAAKF,SAAS,CAAEJ,OAAQ,gBAlB5B,EAqBEO,QAAU,WACR,EAAKH,UAAS,SAAAP,GAAK,MAAK,CACtBI,UAAWJ,EAAMI,cAvBvB,EA2BEO,aAAe,SAACC,GACd,EAAKL,SAAS,CAAEF,aAAcO,KA5BlC,EA+BEC,MAAQ,WACN,EAAKN,SAAS,CACZJ,OAAQ,GACRE,YAAa,EACbD,UAAU,KAnChB,4CAuCE,WAAU,IAAD,OACP,EAMIU,KAAKd,MALPC,EADF,EACEA,MACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,YAGIU,EAAgBd,EAAMe,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUb,KAoB1D,OAlBAU,EAAcI,MAAK,SAACC,EAAOC,GACzB,OAAQlB,GACN,IAAK,MACH,OAAOiB,EAAME,cAAcD,GAE7B,IAAK,aACH,OAAOD,EAAMG,WAAW,IAAK,IAAIL,OAC7BG,EAAME,WAAW,IAAK,IAAIL,OAEhC,QACE,OAAO,MAITd,GACFW,EAAcL,UAId,mCACE,sBAAKc,UAAU,MAAf,UACE,uCACA,wBACEC,KAAK,SACLD,UAAWE,IACT,gBACA,CAAEC,OAAQzB,IAEZ0B,QAASd,KAAKR,WANhB,mBAUCJ,EAEG,qCACE,qBAAKsB,UAAU,OAAf,SACE,6BACGT,EAAcc,KAAI,SAAAZ,GAAI,OACrB,6BACGA,GADMA,UAOf,sBAAKO,UAAU,SAAf,UACE,wBACEC,KAAK,SACLD,UAAU,iBACVI,QAASd,KAAKN,QAHhB,iCAQA,wBACEiB,KAAK,SACLD,UAAU,iBACVI,QAASd,KAAKL,eAHhB,iCAQA,wBACEgB,KAAK,SACLD,UAAU,iBACVI,QAASd,KAAKJ,QAHhB,qBAQA,+BACE,wBACEc,UAAU,eACVM,QAAQ,cAFV,mCAKG,IACD,uBACEL,KAAK,SACLM,KAAK,cACLC,GAAG,cACHC,IAAK,EACLC,IAAKjC,EAAMiB,OACXiB,MAAO9B,EACP+B,SAAU,SAACxB,GACT,EAAKD,aAAaC,EAAMyB,OAAOF,eAMvC,wBACEV,KAAK,SACLD,UAAU,uCACVI,QAASd,KAAKD,MAHhB,yBAUJ,cAvJd,GAAyByB,IAAMC,WCtB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2dd5457c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst initialList = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  isClicked: boolean,\n  sortBy: string,\n  reversed: boolean,\n  selectValue: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: initialList,\n    isClicked: false,\n    sortBy: 'id',\n    reversed: false,\n    selectValue: 1,\n  };\n\n  createList = () => {\n    this.setState({ isClicked: true });\n  };\n\n  sortASC = () => {\n    this.setState({ sortBy: 'ASC' });\n  };\n\n  sortNameLength = () => {\n    this.setState({ sortBy: 'nameLength' });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      reversed: !state.reversed,\n    }));\n  };\n\n  selectLength = (event: string) => {\n    this.setState({ selectValue: +event });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: '',\n      selectValue: 1,\n      reversed: false,\n    });\n  };\n\n  render() {\n    const {\n      goods,\n      isClicked,\n      sortBy,\n      reversed,\n      selectValue,\n    } = this.state;\n\n    const filteredGoods = goods.filter(good => good.length >= selectValue);\n\n    filteredGoods.sort((item1, item2) => {\n      switch (sortBy) {\n        case 'ASC':\n          return item1.localeCompare(item2);\n\n        case 'nameLength':\n          return item1.replaceAll(' ', '').length\n            - item2.replaceAll(' ', '').length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (reversed) {\n      filteredGoods.reverse();\n    }\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Goods</h1>\n          <button\n            type=\"button\"\n            className={classNames(\n              'button__start',\n              { hidden: isClicked },\n            )}\n            onClick={this.createList}\n          >\n            Start\n          </button>\n          {isClicked\n            ? (\n              <>\n                <div className=\"list\">\n                  <ul>\n                    {filteredGoods.map(good => (\n                      <li key={good}>\n                        {good}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className=\"button\">\n                  <button\n                    type=\"button\"\n                    className=\"button__option\"\n                    onClick={this.sortASC}\n                  >\n                    Sort alphabetically\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"button__option\"\n                    onClick={this.sortNameLength}\n                  >\n                    Sort by name length\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"button__option\"\n                    onClick={this.reverse}\n                  >\n                    Reverse\n                  </button>\n\n                  <form>\n                    <label\n                      className=\"button__form\"\n                      htmlFor=\"selectValue\"\n                    >\n                      Filter by name length:\n                      {' '}\n                      <input\n                        type=\"number\"\n                        name=\"selectValue\"\n                        id=\"selectValue\"\n                        min={1}\n                        max={goods.length}\n                        value={selectValue}\n                        onChange={(event) => {\n                          this.selectLength(event.target.value);\n                        }}\n                      />\n                    </label>\n                  </form>\n\n                  <button\n                    type=\"button\"\n                    className=\"button__option button__option__reset\"\n                    onClick={this.reset}\n                  >\n                    Reset\n                  </button>\n                </div>\n              </>\n            )\n            : null}\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}